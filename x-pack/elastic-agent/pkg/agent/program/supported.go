// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
